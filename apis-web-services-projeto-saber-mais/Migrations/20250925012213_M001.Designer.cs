// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apis_web_services_projeto_saber_mais.Models;

#nullable disable

namespace apis_web_services_projeto_saber_mais.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250925012213_M001")]
    partial class M001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AreaProfessor", b =>
                {
                    b.Property<int>("AreasId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessoresId")
                        .HasColumnType("int");

                    b.HasKey("AreasId", "ProfessoresId");

                    b.HasIndex("ProfessoresId");

                    b.ToTable("ProfessorArea", (string)null);
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("AvaliadorAlunoId")
                        .HasColumnType("int");

                    b.Property<int?>("AvaliadorProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex("AvaliadorAlunoId");

                    b.HasIndex("AvaliadorProfessorId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Disponibilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaDaSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HoraFim")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disponibilidades");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Professor", b =>
                {
                    b.HasBaseType("apis_web_services_projeto_saber_mais.Models.Usuario");

                    b.Property<string>("Certificacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competencias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("AreaProfessor", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Area", null)
                        .WithMany()
                        .HasForeignKey("AreasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Professor", null)
                        .WithMany()
                        .HasForeignKey("ProfessoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Agendamento", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Usuario", "Aluno")
                        .WithMany("AgendamentosComoAluno")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Professor", "Professor")
                        .WithMany("AgendamentosComoProfessor")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Avaliacao", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Agendamento", "Agendamento")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Usuario", "AvaliadorAluno")
                        .WithMany("AvaliacoesFeitas")
                        .HasForeignKey("AvaliadorAlunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Professor", "AvaliadorProfessor")
                        .WithMany()
                        .HasForeignKey("AvaliadorProfessorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Professor", null)
                        .WithMany("AvaliacoesRecebidas")
                        .HasForeignKey("ProfessorId");

                    b.Navigation("Agendamento");

                    b.Navigation("AvaliadorAluno");

                    b.Navigation("AvaliadorProfessor");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Disponibilidade", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Professor", "Professor")
                        .WithMany("Disponibilidades")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Professor", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("apis_web_services_projeto_saber_mais.Models.Professor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Agendamento", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Usuario", b =>
                {
                    b.Navigation("AgendamentosComoAluno");

                    b.Navigation("AvaliacoesFeitas");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Professor", b =>
                {
                    b.Navigation("AgendamentosComoProfessor");

                    b.Navigation("AvaliacoesRecebidas");

                    b.Navigation("Disponibilidades");
                });
#pragma warning restore 612, 618
        }
    }
}
