// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apis_web_services_projeto_saber_mais.Models;

#nullable disable

namespace apis_web_services_projeto_saber_mais.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251031020410_M008")]
    partial class M008
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgendamentoId")
                        .HasColumnType("int");

                    b.Property<int>("AvaliadorAlunoId")
                        .HasColumnType("int");

                    b.Property<int>("AvaliadorProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Nota")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgendamentoId");

                    b.HasIndex("AvaliadorAlunoId");

                    b.HasIndex("AvaliadorProfessorId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Disponibilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaDaSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HoraFim")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disponibilidades");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.LinkDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("LinkDto");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.ProfessorArea", b =>
                {
                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.HasKey("ProfessorId", "AreaId");

                    b.HasIndex("AreaId");

                    b.ToTable("ProfessorArea");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Aluno", b =>
                {
                    b.HasBaseType("apis_web_services_projeto_saber_mais.Models.Usuario");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Professor", b =>
                {
                    b.HasBaseType("apis_web_services_projeto_saber_mais.Models.Usuario");

                    b.Property<string>("Certificacoes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competencias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Professores", (string)null);
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Agendamento", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Aluno", "Aluno")
                        .WithMany("Agendamentos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Professor", "Professor")
                        .WithMany("AgendamentosComoProfessor")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Avaliacao", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Agendamento", "Agendamento")
                        .WithMany()
                        .HasForeignKey("AgendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Aluno", "AvaliadorAluno")
                        .WithMany("AvaliacoesFeitas")
                        .HasForeignKey("AvaliadorAlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Professor", "AvaliadorProfessor")
                        .WithMany()
                        .HasForeignKey("AvaliadorProfessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Professor", null)
                        .WithMany("Avaliacoes")
                        .HasForeignKey("ProfessorId");

                    b.Navigation("Agendamento");

                    b.Navigation("AvaliadorAluno");

                    b.Navigation("AvaliadorProfessor");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Disponibilidade", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Professor", "Professor")
                        .WithMany("Disponibilidades")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.LinkDto", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Area", null)
                        .WithMany("Links")
                        .HasForeignKey("AreaId");

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Avaliacao", null)
                        .WithMany("Links")
                        .HasForeignKey("AvaliacaoId");

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Usuario", null)
                        .WithMany("Links")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.ProfessorArea", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Area", "Area")
                        .WithMany("Professores")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Professor", "Professor")
                        .WithMany("Areas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Aluno", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("apis_web_services_projeto_saber_mais.Models.Aluno", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Professor", b =>
                {
                    b.HasOne("apis_web_services_projeto_saber_mais.Models.Usuario", null)
                        .WithOne()
                        .HasForeignKey("apis_web_services_projeto_saber_mais.Models.Professor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Area", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Professores");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Avaliacao", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Usuario", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Aluno", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("AvaliacoesFeitas");
                });

            modelBuilder.Entity("apis_web_services_projeto_saber_mais.Models.Professor", b =>
                {
                    b.Navigation("AgendamentosComoProfessor");

                    b.Navigation("Areas");

                    b.Navigation("Avaliacoes");

                    b.Navigation("Disponibilidades");
                });
#pragma warning restore 612, 618
        }
    }
}
